<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jQuery on Frontend developer</title>
    <link>http://javifm.com/beta/tags/jquery/</link>
    <description>Recent content in jQuery on Frontend developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Wed, 27 Apr 2016 14:54:10 +0000</lastBuildDate>
    
	<atom:link href="http://javifm.com/beta/tags/jquery/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Suscribirse de manera segura a eventos con jQuery</title>
      <link>http://javifm.com/beta/blog/suscribirse-de-manera-segura-a-eventos-con-jquery/</link>
      <pubDate>Wed, 27 Apr 2016 14:54:10 +0000</pubDate>
      
      <guid>http://javifm.com/beta/blog/suscribirse-de-manera-segura-a-eventos-con-jquery/</guid>
      <description>Un truco del que me acabo de enterar, que seguro será de gran utilidad a la hora de desarrollar aplicaciones con Javascript. Sobre todo aplicaciones SPA (Single Page Application). A la hora de suscribirnos a eventos de manera global en nuestras ventanas, escenas, vistas (hay multitud de forma de llamarlas según el framework o el entorno en que trabajes) es algo muy normal suscribirnos a eventos en window.
Un ejemplo sería el evento resize.</description>
    </item>
    
    <item>
      <title>Obtener el valor de una propiedad CSS en porcentaje</title>
      <link>http://javifm.com/beta/blog/obtener-el-valor-de-una-propiedad-css-en-porcentaje/</link>
      <pubDate>Fri, 18 Mar 2016 12:22:35 +0000</pubDate>
      
      <guid>http://javifm.com/beta/blog/obtener-el-valor-de-una-propiedad-css-en-porcentaje/</guid>
      <description>Un tip rápido, trabajando con jQuery no es posible obtener de un nodo por ejemplo, el valor del ancho en porcentaje. Lo primero y más lógico que se nos ocurre sería invocar al método css y pedirle el width (equivalente sería a otras propiedades como top, left, height, etc):
var $element = $(&amp;#34;&amp;lt;div id=&amp;#39;nodo&amp;#39; style=&amp;#39;width: 50%&amp;#39;&amp;gt;&amp;lt;/div&amp;gt;&amp;#34;);$(&amp;#34;body&amp;#34;).append( $element );console.log( $(&amp;#34;#nodo&amp;#34;).css(&amp;#34;width&amp;#34;) ); // 683px  Si quisieramos obtener el valor en porcentaje, habría que hacerlo de otra manera, directamente sin jQuery.</description>
    </item>
    
    <item>
      <title>Evitar que jQuery sea global con RequireJS</title>
      <link>http://javifm.com/beta/blog/evitar-que-jquery-sea-global-con-requirejs/</link>
      <pubDate>Tue, 03 Nov 2015 12:56:17 +0000</pubDate>
      
      <guid>http://javifm.com/beta/blog/evitar-que-jquery-sea-global-con-requirejs/</guid>
      <description>El popular framework de Javascript jQuery, es utilizado ampliamente en el mundo del desarrollo web. Por defecto se instancia en la variable global $, además de jQuery. Esto puede entrar en conflicto con otras librerías que hayan decidido utilizar el $ también. Si estás utilizando el popular cargador de módulos RequireJS, hay una manera muy fácil para evitar que jQuery se instancie globalmente.
Por ejemplo, desarrollando para las televisiones SmartTV de Samsung, me encontré con ese problema, ya que Samsung incluye internamente su propia versión de jQuery, sobreescribiendo la que añadas.</description>
    </item>
    
    <item>
      <title>Width() de jQuery sin redondeo</title>
      <link>http://javifm.com/beta/blog/width-de-jquery-sin-redondeo/</link>
      <pubDate>Thu, 26 Feb 2015 10:36:01 +0000</pubDate>
      
      <guid>http://javifm.com/beta/blog/width-de-jquery-sin-redondeo/</guid>
      <description>Un tip muy rápido y muy sencillo, pero que no conocía. Por defecto si haces uso de los métodos .width() y .height() de jQuery, los valores devueltos se encuentran redondeados. Si en alguna ocasión necesitas con precisión conocer los decimales, puedes utilizar el método getBoundingClientRect() incorporado en ES4 y soportado por todos los navegadores. Por ejemplo el width se obtendría de la siguiente manera:
$(&amp;#34;#selector&amp;#34;)[0].getBoundingClientRect().width  </description>
    </item>
    
    <item>
      <title>Detectar fin de una transición/animación CSS3 con Javascript</title>
      <link>http://javifm.com/beta/blog/detectar-fin-de-una-transici%C3%B3n/animaci%C3%B3n-css3-con-javascript/</link>
      <pubDate>Sun, 29 Jun 2014 10:06:28 +0000</pubDate>
      
      <guid>http://javifm.com/beta/blog/detectar-fin-de-una-transici%C3%B3n/animaci%C3%B3n-css3-con-javascript/</guid>
      <description>Nunca me había visto en la necesidad de detectar cuando una transición CSS3 termina, pero el otro día en el trabajo, para desplegar cierta información, estamos utilizando 2 contenedores, y al añadir una clase se activa una animación CSS3 que va aumentando el margen izquierdo del div hasta que aparece el siguiente. Para ello estamos utilizando eventos de teclado, si pulsamos flecha derecha va hacia la derecha, en caso de pulsar la flecha izquierda, hacia la izquierda, muy sencillito.</description>
    </item>
    
  </channel>
</rss>