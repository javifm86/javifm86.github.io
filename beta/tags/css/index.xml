<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>css on Frontend developer</title>
    <link>https://javifm.com/beta/tags/css/</link>
    <description>Recent content in css on Frontend developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Fri, 18 Mar 2016 12:22:35 +0000</lastBuildDate>
    
	<atom:link href="https://javifm.com/beta/tags/css/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Obtener el valor de una propiedad CSS en porcentaje</title>
      <link>https://javifm.com/beta/blog/obtener-el-valor-de-una-propiedad-css-en-porcentaje/</link>
      <pubDate>Fri, 18 Mar 2016 12:22:35 +0000</pubDate>
      
      <guid>https://javifm.com/beta/blog/obtener-el-valor-de-una-propiedad-css-en-porcentaje/</guid>
      <description>Un tip rápido, trabajando con jQuery no es posible obtener de un nodo por ejemplo, el valor del ancho en porcentaje. Lo primero y más lógico que se nos ocurre sería invocar al método css y pedirle el width (equivalente sería a otras propiedades como top, left, height, etc):
var $element = $(&amp;#34;&amp;lt;div id=&amp;#39;nodo&amp;#39; style=&amp;#39;width: 50%&amp;#39;&amp;gt;&amp;lt;/div&amp;gt;&amp;#34;);$(&amp;#34;body&amp;#34;).append( $element );console.log( $(&amp;#34;#nodo&amp;#34;).css(&amp;#34;width&amp;#34;) ); // 683px  Si quisieramos obtener el valor en porcentaje, habría que hacerlo de otra manera, directamente sin jQuery.</description>
    </item>
    
    <item>
      <title>Compilando ficheros Sass con grunt</title>
      <link>https://javifm.com/beta/blog/compilando-ficheros-sass-con-grunt/</link>
      <pubDate>Wed, 09 Sep 2015 13:50:35 +0000</pubDate>
      
      <guid>https://javifm.com/beta/blog/compilando-ficheros-sass-con-grunt/</guid>
      <description>&lt;img
    class=&#39;mb-6 &#39;
    srcset=&#39;
    /beta/blog/compilando-ficheros-sass-con-grunt/img/grunt-sass.png 500w
    
      ,/beta/blog/compilando-ficheros-sass-con-grunt/img/grunt-sass_hubefd48497ebd2d6fa2d470b69755af54_17529_500x0_resize_box_2.png 500w
    
    
    
    &#39;
    src=&#34;https://javifm.com/beta/beta/blog/compilando-ficheros-sass-con-grunt/img/grunt-sass.png&#34;
    width=&#34;500&#34; height=&#34;260&#34;
    alt=&#39;Grunt y Sass&#39;&gt;


&lt;p&gt;A lo largo de los 2 últimos años, he ido poco a poco &lt;strong&gt;mejorando mi nivel de productividad&lt;/strong&gt; en el trabajo. Primero cambié mi editor de toda la vida, &lt;a href=&#34;https://notepad-plus-plus.org/&#34;&gt;Notepad++&lt;/a&gt; por &lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;Sublime Text&lt;/a&gt;. Y posteriormente, he ido añadiendo diferentes herramientas que proporciona &lt;strong&gt;Node.js&lt;/strong&gt;, para automatizar distintos procesos y tareas, como ejecución de tests, linters de código, minimizado de Javascript y CSS, etc&amp;#8230;&lt;/p&gt;

&lt;p&gt;Para automatizar más aún todos estos procesos, está &lt;a href=&#34;http://gruntjs.com/&#34;&gt;Grunt&lt;/a&gt;, que dispone de plugins fáciles de integrar en nuestros proyectos, para realizar todo tipo de tareas que precisemos en nuestro proyecto. En mi proyecto actual, surgió una necesidad a un compañero de proyecto, que se encarga de la maquetación de la aplicación que estamos desarrollando.&lt;/p&gt;

&lt;p&gt;Para ello está utilizando &lt;a href=&#34;http://sass-lang.com/&#34;&gt;Sass&lt;/a&gt;, uno de los preprocesadores CSS más populares actualmente. Por motivos de simplicidad de código y maximizar la compatibilidad con navegadores no muy modernos (mantenemos soporte a navegadores webKit antiguos, que usan algunas Smart TV anteriores a 2013), a la hora de hacer los elementos reutilizables de la aplicación con Javascript, decidimos que en lugar de que cada widget cargue su hoja de estilos, &lt;strong&gt;tener todo el CSS de todos los widgets unificados en un mismo fichero que esté cargado desde el principio&lt;/strong&gt; (controlar cuando se ha cargado una hoja de estilos, de manera simple y compatible con todos los navegadores es una tarea que &lt;a href=&#34;http://requirejs.org/docs/faq-advanced.html#css&#34;&gt;ni RequireJS ha incluido en su cargador de módulos&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ellipsis de múltiples líneas con Javascript</title>
      <link>https://javifm.com/beta/blog/ellipsis-de-m%C3%BAltiples-l%C3%ADneas-con-javascript/</link>
      <pubDate>Mon, 07 Sep 2015 09:00:57 +0000</pubDate>
      
      <guid>https://javifm.com/beta/blog/ellipsis-de-m%C3%BAltiples-l%C3%ADneas-con-javascript/</guid>
      <description>Ellipsis es simplemente un cáracter compuesto por tres puntos: &amp;#8220;…&amp;#8221;. En desarrollo web, se aplica a textos muy largos que son más grandes que su contenedor, y por tanto queremos que sean recortados agregando al final el carácter ellipsis. Con el avance de los estándares css modernos, ya podemos aplicar una solución sin necesidad de echar mano de Javascript:
.ellipsis {white-space: nowrap;overflow: hidden;text-overflow: ellipsis;-o-text-overflow: ellipsis;} ¿Cual es la limitación?</description>
    </item>
    
    <item>
      <title>Depurar maquetación CSS con una línea de código</title>
      <link>https://javifm.com/beta/blog/depurar-maquetaci%C3%B3n-css-con-una-l%C3%ADnea-de-c%C3%B3digo/</link>
      <pubDate>Mon, 13 Oct 2014 11:03:44 +0000</pubDate>
      
      <guid>https://javifm.com/beta/blog/depurar-maquetaci%C3%B3n-css-con-una-l%C3%ADnea-de-c%C3%B3digo/</guid>
      <description>Llevo aproximadamente 8 años trabajando como desarrollador Javascript principalmente, y la verdad es que cada día uno sigue descubriendo cosas que no dejan de sorprenderle. En este caso, un código de una línea, que sirve para visualizar el layout de todos los elementos CSS de una página.
Es un código ideal para depurar, ver donde se te descuadra un div, donde se te ha colado un margen, controlar al milímetro todo.</description>
    </item>
    
    <item>
      <title>Detectar fin de una transición/animación CSS3 con Javascript</title>
      <link>https://javifm.com/beta/blog/detectar-fin-de-una-transici%C3%B3n/animaci%C3%B3n-css3-con-javascript/</link>
      <pubDate>Sun, 29 Jun 2014 10:06:28 +0000</pubDate>
      
      <guid>https://javifm.com/beta/blog/detectar-fin-de-una-transici%C3%B3n/animaci%C3%B3n-css3-con-javascript/</guid>
      <description>Nunca me había visto en la necesidad de detectar cuando una transición CSS3 termina, pero el otro día en el trabajo, para desplegar cierta información, estamos utilizando 2 contenedores, y al añadir una clase se activa una animación CSS3 que va aumentando el margen izquierdo del div hasta que aparece el siguiente. Para ello estamos utilizando eventos de teclado, si pulsamos flecha derecha va hacia la derecha, en caso de pulsar la flecha izquierda, hacia la izquierda, muy sencillito.</description>
    </item>
    
  </channel>
</rss>